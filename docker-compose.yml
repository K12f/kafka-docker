version: "3.9"
services:
  zookeeper-1:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    restart: always
    networks:
      - kafka-network

  zookeeper-2:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "32181:2181"
    restart: always
    networks:
      - kafka-network

  kafka-1:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
    ports:
      - "29092:29092"
    volumes:
      - ./data/kafka-1/:/var/lib/kafka/data:rw
    networks:
      - kafka-network
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-1:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: always

  kafka-2:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper-1
      - zookeeper-2
    ports:
      - "39092:39092"
    volumes:
      - ./data/kafka-2/:/var/lib/kafka/data:rw
    networks:
      - kafka-network
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181,zookeeper-2:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka-2:9092,PLAINTEXT_HOST://localhost:39092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: always

  kafka-map:
    image: dushixiang/kafka-map:latest
    ports:
      - "18080:8080"
    environment:
      DEFAULT_USERNAME: admin
      DEFAULT_PASSWORD: admin
    networks:
      - kafka-network
    volumes:
      - ./data/kafka-map:/usr/local/kafka-map/data:rw
    restart: always

#  xxl-job-admin:
#    image: xuxueli/xxl-job-admin:2.3.0
#    ports:
#      - "18081:8080"
#    volumes:
#      - ./data/xxl-job-admin/applogs:/data/applogs:rw
#    networks:
#      - kafka-network
#    environment:
#      - spring.datasource.url=jdbc:mysql://127.0.0.1:3306/xxl_job?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&serverTimezone=Asia/Shanghai
#      - spring.datasource.username=root
#      - spring.datasource.password=123456
#    restart: always
#  eagle:
#    build:
#      context: ./eagle
#    environment:
#      EFAK_CLUSTER_ZK_LIST: zookeeper-1:2181,zookeeper-2:2181
#    restart: always
#    depends_on:
#      - kafka-1
#      - kafka-2
#    ports:
#      - "8048:8048"

networks:
  kafka-network:
    name: services-network
    external: true
